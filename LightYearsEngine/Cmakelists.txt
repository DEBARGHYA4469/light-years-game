add_library(${LIGHT_YEARS_ENGINE_TARGET_NAME} STATIC
	
 "src/framework/Application.cpp" "include/framework/Application.h" "include/EntryPoint.h" "src/EntryPoint.cpp" "include/framework/Core.h" "src/framework/Core.cpp" "include/framework/World.h" "src/framework/World.cpp" "include/framework/Actor.h" "src/framework/Actor.cpp" "include/framework/Object.h"  "src/framework/Object.cpp" "include/framework/AssetManager.h" "src/framework/AssetManager.cpp" "include/framework/MathUtil.h" "src/framework/MathUtil.cpp" "include/framework/PhysicsSystem.h" "src/framework/PhysicsSystem.cpp" "include/framework/Delegate.h" "include/VFX/Particle.h" "src/VFX/Particle.cpp" "include/framework/TimerManager.h" "src/framework/TimerManager.cpp" "include/gameplay/GameStage.h" "src/gameplay/GameStage.cpp" "include/gameplay/WaitStage.h" "src/gameplay/WaitStage.cpp" "include/widgets/HUD.h" "src/widgets/HUD.cpp" "include/widgets/Widget.h" "src/widgets/Widget.cpp" "include/widgets/TextWidget.h" "src/widgets/TextWidget.cpp" "src/widgets/ValueGauge.cpp" "include/widgets/ValueGauge.h" "include/widgets/ImageWidget.h" "src/widgets/ImageWidget.cpp" "include/widgets/Button.h" "src/widgets/Button.cpp" )

target_include_directories(${LIGHT_YEARS_ENGINE_TARGET_NAME} PUBLIC 
	${CMAKE_CURRENT_SOURCE_DIR}/include
)

include(FetchContent)
set(SFML_LIB_NAME SFML)

FetchContent_Declare(
	${SFML_LIB_NAME}
	GIT_REPOSITORY https://github.com/SFML/SFML
	GIT_TAG 2.5.1
	GIT_SHALLOW FALSE
)

FetchContent_MakeAvailable(${SFML_LIB_NAME})

target_link_libraries(${LIGHT_YEARS_ENGINE_TARGET_NAME} PUBLIC sfml-graphics)
target_link_libraries(${LIGHT_YEARS_ENGINE_TARGET_NAME} PUBLIC sfml-audio)
target_link_libraries(${LIGHT_YEARS_ENGINE_TARGET_NAME} PUBLIC sfml-network)
target_link_libraries(${LIGHT_YEARS_ENGINE_TARGET_NAME} PUBLIC sfml-system)
target_link_libraries(${LIGHT_YEARS_ENGINE_TARGET_NAME} PUBLIC sfml-window)


set(BOX2D_LIB_NAME Box2D)
FetchContent_Declare(
	${BOX2D_LIB_NAME}
	GIT_REPOSITORY https://github.com/erincatto/box2d
	GIT_TAG v2.4.1
	GIT_SHALLOW FALSE
)

FetchContent_MakeAvailable(${BOX2D_LIB_NAME})   
target_link_libraries(${LIGHT_YEARS_ENGINE_TARGET_NAME} PUBLIC box2d)

function(CopyLibToTarget LIB_NAME TARGET_NAME)
	add_custom_command(TARGET ${TARGET_NAME}
	POST_BUILD 
	COMMAND 
	${CMAKE_COMMAND} -E copy_if_different 
	$<TARGET_FILE:${LIB_NAME}>
	$<TARGET_FILE_DIR:${TARGET_NAME}>
)
endfunction()

CopyLibToTarget(sfml-audio ${LIGHT_YEARS_ENGINE_TARGET_NAME})
CopyLibToTarget(sfml-graphics ${LIGHT_YEARS_ENGINE_TARGET_NAME})
CopyLibToTarget(sfml-main ${LIGHT_YEARS_ENGINE_TARGET_NAME})
CopyLibToTarget(sfml-system ${LIGHT_YEARS_ENGINE_TARGET_NAME})
CopyLibToTarget(sfml-network ${LIGHT_YEARS_ENGINE_TARGET_NAME})
CopyLibToTarget(sfml-window ${LIGHT_YEARS_ENGINE_TARGET_NAME})
CopyLibToTarget(box2d ${LIGHT_YEARS_ENGINE_TARGET_NAME})

